//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Coginov.CoginovService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://api.coginov.com/api", ConfigurationName="CoginovService.coginovapi")]
    public interface coginovapi {
        
        // CODEGEN: Generating message contract since the operation coginovApi is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Coginov.CoginovService.coginovApiResponse1 coginovApi(Coginov.CoginovService.coginovApiRequest1 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Coginov.CoginovService.coginovApiResponse1> coginovApiAsync(Coginov.CoginovService.coginovApiRequest1 request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://api.coginov.com/api")]
    public partial class coginovApiRequest : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string authKeyField;
        
        private bool wrapResultInCdataField;
        
        private coginovApiRequestLang langField;
        
        private bool langFieldSpecified;
        
        private coginovApiRequestDocument documentField;
        
        private coginovApiRequestServiceCall[] serviceCallField;
        
        public coginovApiRequest() {
            this.wrapResultInCdataField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string authKey {
            get {
                return this.authKeyField;
            }
            set {
                this.authKeyField = value;
                this.RaisePropertyChanged("authKey");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool wrapResultInCdata {
            get {
                return this.wrapResultInCdataField;
            }
            set {
                this.wrapResultInCdataField = value;
                this.RaisePropertyChanged("wrapResultInCdata");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public coginovApiRequestLang lang {
            get {
                return this.langField;
            }
            set {
                this.langField = value;
                this.RaisePropertyChanged("lang");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool langSpecified {
            get {
                return this.langFieldSpecified;
            }
            set {
                this.langFieldSpecified = value;
                this.RaisePropertyChanged("langSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public coginovApiRequestDocument document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
                this.RaisePropertyChanged("document");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("serviceCall", Order=4)]
        public coginovApiRequestServiceCall[] serviceCall {
            get {
                return this.serviceCallField;
            }
            set {
                this.serviceCallField = value;
                this.RaisePropertyChanged("serviceCall");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://api.coginov.com/api")]
    public enum coginovApiRequestLang {
        
        /// <remarks/>
        en,
        
        /// <remarks/>
        fr,
        
        /// <remarks/>
        es,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://api.coginov.com/api")]
    public partial class coginovApiRequestDocument : object, System.ComponentModel.INotifyPropertyChanged {
        
        private coginovApiRequestDocumentType typeField;
        
        private string sourceField;
        
        private bool useCacheField;
        
        private bool useCacheFieldSpecified;
        
        private string firstPageField;
        
        private string lastPageField;
        
        private coginovApiRequestDocumentLang langField;
        
        private bool langFieldSpecified;
        
        /// <remarks/>
        public coginovApiRequestDocumentType type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }
        
        /// <remarks/>
        public string source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
                this.RaisePropertyChanged("source");
            }
        }
        
        /// <remarks/>
        public bool useCache {
            get {
                return this.useCacheField;
            }
            set {
                this.useCacheField = value;
                this.RaisePropertyChanged("useCache");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool useCacheSpecified {
            get {
                return this.useCacheFieldSpecified;
            }
            set {
                this.useCacheFieldSpecified = value;
                this.RaisePropertyChanged("useCacheSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string firstPage {
            get {
                return this.firstPageField;
            }
            set {
                this.firstPageField = value;
                this.RaisePropertyChanged("firstPage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer")]
        public string lastPage {
            get {
                return this.lastPageField;
            }
            set {
                this.lastPageField = value;
                this.RaisePropertyChanged("lastPage");
            }
        }
        
        /// <remarks/>
        public coginovApiRequestDocumentLang lang {
            get {
                return this.langField;
            }
            set {
                this.langField = value;
                this.RaisePropertyChanged("lang");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool langSpecified {
            get {
                return this.langFieldSpecified;
            }
            set {
                this.langFieldSpecified = value;
                this.RaisePropertyChanged("langSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://api.coginov.com/api")]
    public enum coginovApiRequestDocumentType {
        
        /// <remarks/>
        DOCUMENT,
        
        /// <remarks/>
        D,
        
        /// <remarks/>
        B,
        
        /// <remarks/>
        TEXT,
        
        /// <remarks/>
        T,
        
        /// <remarks/>
        FILE,
        
        /// <remarks/>
        F,
        
        /// <remarks/>
        TEXTFILE,
        
        /// <remarks/>
        TF,
        
        /// <remarks/>
        FT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://api.coginov.com/api")]
    public enum coginovApiRequestDocumentLang {
        
        /// <remarks/>
        en,
        
        /// <remarks/>
        fr,
        
        /// <remarks/>
        es,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://api.coginov.com/api")]
    public partial class coginovApiRequestServiceCall : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string serviceNameField;
        
        private coginovApiRequestServiceCallServiceParam[] serviceParamField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string serviceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
                this.RaisePropertyChanged("serviceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("serviceParam", Order=1)]
        public coginovApiRequestServiceCallServiceParam[] serviceParam {
            get {
                return this.serviceParamField;
            }
            set {
                this.serviceParamField = value;
                this.RaisePropertyChanged("serviceParam");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://api.coginov.com/api")]
    public partial class coginovApiRequestServiceCallServiceParam : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://api.coginov.com/api")]
    public partial class coginovApiResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object cacheTokenField;
        
        private coginovApiResponseServiceResult[] serviceResultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public object cacheToken {
            get {
                return this.cacheTokenField;
            }
            set {
                this.cacheTokenField = value;
                this.RaisePropertyChanged("cacheToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("serviceResult", Order=1)]
        public coginovApiResponseServiceResult[] serviceResult {
            get {
                return this.serviceResultField;
            }
            set {
                this.serviceResultField = value;
                this.RaisePropertyChanged("serviceResult");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://api.coginov.com/api")]
    public partial class coginovApiResponseServiceResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Xml.XmlNode[] anyField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        [System.Xml.Serialization.XmlAnyElementAttribute(Order=0)]
        public System.Xml.XmlNode[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
                this.RaisePropertyChanged("Any");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class coginovApiRequest1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.coginov.com/api", Order=0)]
        public Coginov.CoginovService.coginovApiRequest coginovApiRequest;
        
        public coginovApiRequest1() {
        }
        
        public coginovApiRequest1(Coginov.CoginovService.coginovApiRequest coginovApiRequest) {
            this.coginovApiRequest = coginovApiRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class coginovApiResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://api.coginov.com/api", Order=0)]
        public Coginov.CoginovService.coginovApiResponse coginovApiResponse;
        
        public coginovApiResponse1() {
        }
        
        public coginovApiResponse1(Coginov.CoginovService.coginovApiResponse coginovApiResponse) {
            this.coginovApiResponse = coginovApiResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface coginovapiChannel : Coginov.CoginovService.coginovapi, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class coginovapiClient : System.ServiceModel.ClientBase<Coginov.CoginovService.coginovapi>, Coginov.CoginovService.coginovapi {
        
        public coginovapiClient() {
        }
        
        public coginovapiClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public coginovapiClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public coginovapiClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public coginovapiClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Coginov.CoginovService.coginovApiResponse1 Coginov.CoginovService.coginovapi.coginovApi(Coginov.CoginovService.coginovApiRequest1 request) {
            return base.Channel.coginovApi(request);
        }
        
        public Coginov.CoginovService.coginovApiResponse coginovApi(Coginov.CoginovService.coginovApiRequest coginovApiRequest) {
            Coginov.CoginovService.coginovApiRequest1 inValue = new Coginov.CoginovService.coginovApiRequest1();
            inValue.coginovApiRequest = coginovApiRequest;
            Coginov.CoginovService.coginovApiResponse1 retVal = ((Coginov.CoginovService.coginovapi)(this)).coginovApi(inValue);
            return retVal.coginovApiResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Coginov.CoginovService.coginovApiResponse1> Coginov.CoginovService.coginovapi.coginovApiAsync(Coginov.CoginovService.coginovApiRequest1 request) {
            return base.Channel.coginovApiAsync(request);
        }
        
        public System.Threading.Tasks.Task<Coginov.CoginovService.coginovApiResponse1> coginovApiAsync(Coginov.CoginovService.coginovApiRequest coginovApiRequest) {
            Coginov.CoginovService.coginovApiRequest1 inValue = new Coginov.CoginovService.coginovApiRequest1();
            inValue.coginovApiRequest = coginovApiRequest;
            return ((Coginov.CoginovService.coginovapi)(this)).coginovApiAsync(inValue);
        }
    }
}
